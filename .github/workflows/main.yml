name: Linters

on: [push, pull_request]

jobs:
  backend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Analysing the code with pylint
        run: |
          pylint ./app.py

  frontend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - name: Install modules
        run: npm install
      - name: Run ESLint 
        run: npm run lint
  
  robot-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "docker-compose.yml"
        env:
          TMCUSERNAME: ${{ secrets.TMCUSERNAME }}
          TMCPASSWORD: ${{ secrets.TMCPASSWORD }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TMC_URL: ${{ secrets.TMC_URL }}
          EXAMPLE_TOKEN: ${{ secrets.EXAMPLE_TOKEN }}

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install MockTMC dependencies
        run: |
          cd mocktmc/
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start MockTMC in background
        env:
          TMCUSERNAME: ${{ secrets.TMCUSERNAME }}
          TMCPASSWORD: ${{ secrets.TMCPASSWORD }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          TMC_URL: ${{ secrets.TMC_URL }}
          EXAMPLE_TOKEN: ${{ secrets.EXAMPLE_TOKEN }}
        run: |
          cd mocktmc/
          python wsgi.py &

      - name: Start frontend for robot
        run: |
          cd frontend/
          npm install
          npm start &

      - name: Run robot tests
        env:
          TMCUSERNAME: ${{ secrets.TMCUSERNAME }}
          TMCPASSWORD: ${{ secrets.TMCPASSWORD }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        run: |
          python -m pip install --upgrade pip
          pip install -r frontend/robot-tests/requirements.txt
          robot frontend/robot-tests

      - name: Upload Robot report and log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: robot-report-log
          path: |
            /home/runner/work/tmc-coach/tmc-coach/*.html
            /home/runner/work/tmc-coach/tmc-coach/selenium-screenshot-*.png
          retention-days: 5   # Reduce file storage retention from 90 days to 5
